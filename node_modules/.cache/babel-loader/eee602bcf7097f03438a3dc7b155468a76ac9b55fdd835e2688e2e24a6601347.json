{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workshop\\\\Song\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport Axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [artist, setArtist] = useState(\"\");\n  const [song, setSong] = useState(\"\");\n  const [lyrics, setLyrics] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  async function searchLyrics() {\n    if (artist === \"\" || song === \"\") {\n      setError(\"Please enter both artist and song name.\");\n      return;\n    }\n    try {\n      const response = await Axios.get(`https://api.musixmatch.com/ws/1.1/matcher.lyrics.get`, {\n        params: {\n          q_artist: artist,\n          q_track: song,\n          apikey: '6efd493ebb0545dd2b551db94ea2edaa' // Use the key provided here\n        }\n      });\n      if (response.data.message.body.lyrics) {\n        setLyrics(response.data.message.body.lyrics.lyrics_body);\n        setError(\"\");\n      } else {\n        setError(\"Lyrics not found for the given artist and song.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching lyrics:\", error);\n      setError(\"An error occurred while fetching lyrics. Please try again later.\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lyrics Finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inp\",\n      type: \"text\",\n      placeholder: \"Artist name\",\n      value: artist,\n      onChange: e => setArtist(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inp\",\n      type: \"text\",\n      placeholder: \"Song name\",\n      value: song,\n      onChange: e => setSong(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: searchLyrics,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: lyrics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WLT8hpY10xqB/EbL9Rh5+pUdt/U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Axios","useState","jsxDEV","_jsxDEV","App","_s","artist","setArtist","song","setSong","lyrics","setLyrics","error","setError","searchLyrics","response","get","params","q_artist","q_track","apikey","data","message","body","lyrics_body","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/Workshop/Song/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport Axios from \"axios\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [artist, setArtist] = useState(\"\");\n  const [song, setSong] = useState(\"\");\n  const [lyrics, setLyrics] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  async function searchLyrics() {\n    if (artist === \"\" || song === \"\") {\n      setError(\"Please enter both artist and song name.\");\n      return;\n    }\n\n    try {\n      const response = await Axios.get(\n        `https://api.musixmatch.com/ws/1.1/matcher.lyrics.get`,\n        {\n          params: {\n            q_artist: artist,\n            q_track: song,\n            apikey: '6efd493ebb0545dd2b551db94ea2edaa' // Use the key provided here\n          }\n        }\n      );\n\n      if (response.data.message.body.lyrics) {\n        setLyrics(response.data.message.body.lyrics.lyrics_body);\n        setError(\"\");\n      } else {\n        setError(\"Lyrics not found for the given artist and song.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching lyrics:\", error);\n      setError(\n        \"An error occurred while fetching lyrics. Please try again later.\"\n      );\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Lyrics Finder</h1>\n      {error && <div className=\"error\">{error}</div>}\n      <input\n        className=\"inp\"\n        type=\"text\"\n        placeholder=\"Artist name\"\n        value={artist}\n        onChange={(e) => setArtist(e.target.value)}\n      />\n      <input\n        className=\"inp\"\n        type=\"text\"\n        placeholder=\"Song name\"\n        value={song}\n        onChange={(e) => setSong(e.target.value)}\n      />\n      <button className=\"btn\" onClick={searchLyrics}>\n        Search\n      </button>\n      <hr />\n      <pre>{lyrics}</pre>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}